{
  "name": "handleOutput",
  "code": "export async function handleOutput(output, value, flags) {\n    if (output === 'bool') {\n        if (flags.emoji) {\n            console.log(value ? '✅' : '❌');\n        }\n        else if (flags.int) {\n            console.log(value ? 1 : 0);\n        }\n        else if (value) {\n            console.log(value);\n        }\n    }\n    else if (output === 'lines') {\n        if (Array.isArray(value)) {\n            console.log(value.join('\\n'));\n        }\n        else {\n            console.log(value);\n        }\n    }\n    else if (output === 'log' && value !== undefined) {\n        console.log(value);\n    }\n    else if (output === 'stdout') {\n        process.stdout.write(value);\n    }\n    else if (output === 'json') {\n        console.log(JSON.stringify(value, null, 2));\n    }\n    else if (output === 'bash') {\n        const code = [value].flat(Infinity).join('\\n');\n        if (flags.print) {\n            console.log(code);\n        }\n        else {\n            import('node:child_process').then(({ execSync }) => {\n                execSync(code, { stdio: 'inherit' });\n            });\n        }\n    }\n}\n"
}